version: "3.8"

services:
  influxdb:
    image: influxdb:1.8.2
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6
    networks:
      - price-network

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./shared/prometheus:/etc/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    networks:
      - price-network

  grafana:
    image: grafana/grafana:8.1.2
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    volumes:
      - ./shared/grafana:/etc/grafana/provisioning
    networks:
      - price-network
  k6:
    image: loadimpact/k6:0.28.0
    ports:
      - "6565:6565"
    volumes:
      - ./shared/k6:/scripts
    environment:
      - K6_OUT=influxdb=http://influxdb:8086/k6
    networks:
      - price-network
  ws-price:
    build:
      context: .
    image: ws-price:latest
    ports:
      - "8080:8080"
    container_name: ws-price-container
    environment:
      SONAR_LOGIN: admin
      SONAR_PASSWORD: admin
    volumes:
      - ./h2-data:/data
    networks:
      - price-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  postgres:
    image: postgres:15
    container_name: sonar-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonarqube
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - price-network

  sonarqube:
    image: sonarqube:lts-community
    container_name: sonarqube
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/sonarqube
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    ports:
      - "9000:9000"
    networks:
      - price-network

networks:
  price-network:
    driver: bridge
volumes:
  postgres_data:



